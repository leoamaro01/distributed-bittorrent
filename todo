- Distribute trackers in a Chord
- Use multicasting or broadcasting for service discovery
- Stop threads more gracefully when exiting the program.
    - Handle every expected error. (timeouts, etc)
# Cache previously received data (e.g. TorrentInfos)
# Include full directory structure in torrent (including empty dirs)
    # on upload
    # on download
    # on register
    # on get info
# Config files for persistence
- (Optional) Use rarest-first piece selection (currently random)
- (Very Optional) Use choke algorithm for peer selection (currently random)
- (Optional) Instead of downloading in chunks of pieces, download one by one and when pieces are finished are new downloads to the executor
# Reject new peers if a total amount of downloads is passed
# Debug file sending to peer
# Download in a different thread
# Download cancelling
# Import downloaded parts from /downloads directory too
# View download logs
# String representation of torrent info